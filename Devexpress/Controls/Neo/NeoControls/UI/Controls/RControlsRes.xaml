<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:NeoTrader.UI.Controls"
                    xmlns:neoTrader="clr-namespace:NeoTrader"
                    xmlns:neoTraderControls="clr-namespace:NeoTrader.UI.Controls"
                    xmlns:root="clr-namespace:NeoTrader"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:dxdot="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys" 
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"                    
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" 
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"                    
                    xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" 
                    xmlns:dxbc="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal" 
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:viewModels="clr-namespace:NeoTrader.UI.ViewModels"
                    >
    <system:Double x:Key="TableRowHeight">22</system:Double>
    <DataTemplate x:Key="BarItemContentDataTemplate">
        <Border x:Name="PART_BAR_Border" Padding="0" Margin="0">
            <DockPanel>
                <TextBlock x:Name="_Text" Text="{Binding DisplayName}" HorizontalAlignment="Left">
                    <dx:Badge.Badge>
                        <dx:Badge BadgeKind="None" Content="{Binding BadgeContent}" />
                    </dx:Badge.Badge>
                </TextBlock>
                <Image x:Name="_StateImg" Margin="2,0,0,0" Height="10" HorizontalAlignment="Right" Source="{Binding StateImg}">
                </Image>
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=DisplayMode}" Value="Content">
                <Setter TargetName="_Text" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DisplayMode}" Value="ContentAndGlyph">
                <Setter TargetName="_Text" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSeparator}" Value="True">
                <Setter TargetName="PART_BAR_Border" Property="BorderThickness" Value="1,0,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=StateImg}" Value="{x:Null}">
                <Setter TargetName="_StateImg" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <controls:LinkStatusToBrushConverter x:Key="LinkStatusToBrushConverter"></controls:LinkStatusToBrushConverter>
    <controls:ELinkStatusToColorTextConverter x:Key="ELinkStatusToColorTextConverter"></controls:ELinkStatusToColorTextConverter>
    <DataTemplate x:Key="GlyphDataTemplate" DataType="{x:Type viewModels:CommandVm}">
        <ContentControl>
            <Grid>
                <Border x:Name="Part_Border" Background="{Binding Converter={StaticResource LinkStatusToBrushConverter}}">
                    <TextBlock Text="{Binding Tag, Converter={StaticResource ELinkStatusToColorTextConverter}}"></TextBlock>
                </Border>
                <!--<dx:DXImage Source="{x:Static Images.Link}"></dx:DXImage>-->
            </Grid>
        </ContentControl>
        <DataTemplate.Triggers>
            <!--<Trigger Property="IsLink" Value="False">
                <Setter TargetName="Part_Border" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>-->
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <DataTemplate x:Key="BarButtonItemDataTemplate">
        <ContentControl>
            <dxb:BarButtonItem KeyGesture="{Binding KeyGesture}"
                               Command="{Binding Command}"                               
                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                               Alignment="{Binding Alignment}"
                               Glyph="{Binding Glyph}"                              
                               ShowKeyGesture="{Binding ShowKeyGesture}"
                               IsEnabled="{Binding IsEnabled}"                               
                               BarItemDisplayMode="{Binding DisplayMode}"   
                               Content="{Binding}" 
                               Margin="0,-1,0,0"
                               Padding="0"                               
                               ContentTemplate="{StaticResource BarItemContentDataTemplate}">
            </dxb:BarButtonItem>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="BarSubItemDataTemplate">
        <ContentControl>
            <controls:RBarSubItem KeyGesture="{Binding KeyGesture}"
                                  Command="{Binding Command}"
                                  Glyph="{Binding Glyph}"    
                                  Margin="0,-1,0,0"
                                  GlyphAlignment="{Binding GlyphAlignment}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                  IsEnabled="{Binding IsEnabled}"                               
                                  BarItemDisplayMode="{Binding DisplayMode}"                                                                          
                                  Content="{Binding}"                            
                                  Alignment="{Binding Alignment}"
                                  ItemLinksSource="{Binding Commands}"
                                  ItemTemplateSelector="{DynamicResource BarItemDataTemplateSelector}"
                                  ContentTemplate="{StaticResource BarItemContentDataTemplate}">
            </controls:RBarSubItem>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="BarCheckItemDataTemplate">
        <ContentControl>
            <dxb:BarCheckItem KeyGesture="{Binding KeyGesture}"                              
                              Command="{Binding Command}"                               
                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                              Alignment="{Binding Alignment}"
                              Glyph="{Binding Glyph}"
                              Margin="0,-1,0,0"
                              ShowKeyGesture="True"
                              IsChecked="{Binding IsChecked}"
                              IsEnabled="{Binding IsEnabled}"                               
                              BarItemDisplayMode="{Binding DisplayMode}"   
                              Content="{Binding}" 
                              ContentTemplate="{StaticResource BarItemContentDataTemplate}">
            </dxb:BarCheckItem>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="LinkItemDataTemplate">
        <ContentControl>
            <dxb:BarButtonItem KeyGesture="{Binding KeyGesture}"
                               Command="{Binding Command}"                                                      
                               Alignment="{Binding Alignment}"                                 
                               GlyphTemplate="{StaticResource GlyphDataTemplate}"
                               ShowKeyGesture="True"
                               Margin="0,-1,0,0"
                               IsEnabled="{Binding IsEnabled}"                               
                               BarItemDisplayMode="{Binding DisplayMode}"   
                               Content="{Binding}" 
                               ContentTemplate="{StaticResource BarItemContentDataTemplate}">
            </dxb:BarButtonItem>
        </ContentControl>
    </DataTemplate>

   <DataTemplate x:Key="RBarItemSeparatorTemplate">
        <ContentControl>
            <dxb:BarItemSeparator Alignment="{Binding Alignment}"/>
        </ContentControl>
    </DataTemplate>


    <controls:BarItemDataTemplateSelector x:Key="BarItemDataTemplateSelector" 
                                       LinkItemTemplate="{StaticResource LinkItemDataTemplate}"
                                       BarCheckItemTemplate="{StaticResource BarCheckItemDataTemplate}"
                                       BarButtonItemTemplate="{StaticResource BarButtonItemDataTemplate}" 
                                       BarSubItemTemplate="{StaticResource BarSubItemDataTemplate}"
                                       BarItemSeparatorTemplate="{StaticResource RBarItemSeparatorTemplate}"
                                       
                                       ></controls:BarItemDataTemplateSelector>

    <!--<DataTemplate x:Key="CommandTemplate">
        <Border x:Name="_Border" >
            <Button x:Name="_Button" Command="{Binding Command}">
                <Button.ContextMenu>
                    <ContextMenu x:Name="MainContextMenu"
                                 PlacementRectangle="{Binding RelativeSource={RelativeSource Self}}">
                        <MenuItem Header="Main">
                            <MenuItem Header="Find" />
                            <MenuItem Header="Add" />
                            <MenuItem Header="View" />
                            <MenuItem Header="Edit" />
                        </MenuItem>
                    </ContextMenu>
                </Button.ContextMenu>
                <Button.Triggers>
                    <EventTrigger SourceName="_Button" RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainContextMenu"
                                                               Storyboard.TargetProperty="(ContextMenu.IsOpen)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <system:Boolean>True</system:Boolean>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
                <StackPanel x:Name="_Panel" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image x:Name="_Glyph" Width="20" Height="20" Source="{Binding Glyph}" Margin="0,-2,0,-2"/>
                    <TextBlock x:Name="_Text" Text="{Binding DisplayName}">
                        <dx:Badge.Badge>
                            <dx:Badge BadgeKind="None" Content="{Binding BadgeContent}" />
                        </dx:Badge.Badge>
                    </TextBlock>
                    <Image x:Name="_StateImg" Width="20" Height="20" Source="{Binding StateImg}" />
                </StackPanel>
            </Button>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=DisplayMode}" Value="Content">
                <Setter TargetName="_Glyph" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="_Text" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DisplayMode}" Value="ContentAndGlyph">
                <Setter TargetName="_Glyph" Property="Visibility" Value="Visible" />
                <Setter TargetName="_Text" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsSeparator}" Value="True">
                <Setter TargetName="_Border" Property="BorderThickness" Value="1,0,0,0" />
                <Setter TargetName="_Button" Property="Visibility" Value="Collapsed" />
            </DataTrigger>


        </DataTemplate.Triggers>
    </DataTemplate>-->
    <!--<Style TargetType="controls:RToolItem" >
        --><!--<Setter Property="Template">                --><!--ControlTemplate--><!--
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Image Source="{Binding CommandVm.Glyph}" />
                            <TextBlock Text="{Binding CommandVm.DisplayName}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>

        </Setter>--><!--

        <Setter Property="ContentTemplate">     --><!--DataTemplate--><!--
            <Setter.Value>
                <DataTemplate DataType="CommandVm">
                    <Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Image Source="{Binding Glyph}" />
                            <TextBlock Text="{Binding DisplayName}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        --><!--<Setter Property="con">
            <Setter.Value>

            </Setter.Value>

        </Setter>--><!--


    </Style>-->
    <!--<ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=BarTemplate,IsThemeIndependent = true}" TargetType="{x:Type ContentControl}">
        <Border x:Name="Root" Background="{dxi:ThemeResource {themes:PaletteBrushThemeKey ResourceKey=SelectionBackground}}" x:Uid="@Background=Window.Background">
            <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" Value="True">
                <Setter Property="Background" TargetName="Root" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasBorderBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" Value="True">
                <Setter Property="BorderBrush" TargetName="Root" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.BorderBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" Value="True">
                <Setter Property="BorderThickness" TargetName="Root" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasPadding), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" Value="True">
                <Setter Property="Padding" TargetName="Root" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.Padding), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" Value="True">
                <Setter Property="CornerRadius" TargetName="Root" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarControl}}}" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="46" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->

    <controls:RGridControlToVmValueConverter x:Key="RDataGrid_RowToolCommandsValueConverter"></controls:RGridControlToVmValueConverter>
    <ControlTemplate x:Key="RDataGrid_RowCommonToolsTemplate">
        <dxb:BarContainerControl HorizontalAlignment="Right" Margin="0,0,-1,1" Padding="0" >
            <dxb:ToolBarControl RotateWhenVertical="True"                                                                 
                                ShowDragWidget="False"                       
                                Margin="0,0,0,0" Padding="0,0,0,0"
                                AllowCustomizationMenu="False"
                                AllowQuickCustomization="False" 
                                Background="{dxi:ThemeResource {themes:PaletteBrushThemeKey ResourceKey=Window.Background}}"
                                ItemTemplateSelector="{DynamicResource BarItemDataTemplateSelector}">

                                <!--Background="{dxi:ThemeResource {themes:PaletteBrushThemeKey ResourceKey=HoverBackground}}"-->
                <!--<dxb:ToolBarControl.ItemsSource>
                    <MultiBinding Converter="{StaticResource RDataGrid_RowToolCommandsValueConverter}">
                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=dxg:RowControl,Mode=FindAncestor}"></Binding>
                        <Binding Path=""></Binding>
                        <Binding Path="Visibility" RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=dxg:RowControl,Mode=FindAncestor}"></Binding>
                    </MultiBinding>
                </dxb:ToolBarControl.ItemsSource>-->
            </dxb:ToolBarControl>
        </dxb:BarContainerControl>
        <!--<controls:RToolsControl RItemsSource="{Binding ToolVms}"
                                Background="{Binding ToolsBgBrush}"  
                                HorizontalAlignment="Right"
                                Margin="0,0,0,1"
                                ItemTemplate="{StaticResource RToolsControlItemTemplate}">
        </controls:RToolsControl>-->
    </ControlTemplate>

    <controls:BoolToFixedConverter x:Key="BoolToFixedConverter"></controls:BoolToFixedConverter>
    <DataTemplate x:Key="DefaultColumnTemplate">
        <ContentControl>
            <dxg:GridColumn AllowSorting="{Binding AllowSorting}" 
                            CellTemplateSelector="{Binding CellTemplateSelector, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=controls:RDataGrid}}" 
                            Width="{Binding Width}" 
                            Header="{Binding Header}"
                            HeaderTemplate="{DynamicResource GridColumnHeaderDefaultTemplate}"
                            FieldName="{Binding FieldName}"                              
                            Fixed="{Binding IsFixed, Converter={StaticResource BoolToFixedConverter}}"  FilterPopupMode="Disabled"/>
        </ContentControl>
    </DataTemplate>

    <controls:TableRowToolsVisibleConverter x:Key="RDataGrid_RowToolsVisibilityConverter"></controls:TableRowToolsVisibleConverter>
    <ControlTemplate x:Key="RDataGrid_RowControlTemplate" TargetType="dxg:RowControl" >
        <ContentControl Background="Green" x:Name="PART_ROOT">
            <Grid Height="{StaticResource TableRowHeight}" x:Name="Root_Grid" Background="Transparent" >
                <Border x:Name="Background" Background="{TemplateBinding Background}"/>
                <Border x:Name="BottomLine" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" VerticalAlignment="Bottom" />
                <Grid x:Name="PART_LayoutPanel"/>
                <ContentControl x:Name="PART_TOOLS" 
                            DataContext="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=controls:RDataGrid,Mode=FindAncestor}}"
                            Template="{StaticResource RDataGrid_RowCommonToolsTemplate}">
                    <ContentControl.Visibility>
                        <MultiBinding Converter="{StaticResource RDataGrid_RowToolsVisibilityConverter}">
                            <Binding Path="AlwaysShowToolBar"></Binding>
                            <Binding RelativeSource="{RelativeSource AncestorLevel=1,AncestorType=dxg:RowControl,Mode=FindAncestor}" Path="IsMouseOver"></Binding>
                        </MultiBinding>
                    </ContentControl.Visibility>
                </ContentControl>
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand EventName="MouseDoubleClick" 
                                       SourceName="PART_ROOT"
                                       Command="{Binding RMouseDoubleClickCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=neoTraderControls:RDataGrid}}" 
                                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1, AncestorType=dxg:RowControl,Mode=FindAncestor}}">
                    </dxmvvm:EventToCommand>
                    <dxmvvm:EventToCommand EventName="MouseRightButtonUp" 
                                       SourceName="PART_ROOT"
                                       Command="{Binding RMouseRightClickCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=neoTraderControls:RDataGrid}}" 
                                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1, AncestorType=dxg:RowControl,Mode=FindAncestor}}">
                    </dxmvvm:EventToCommand>
                    <dxmvvm:EventToCommand EventName="Loaded" 
                                       SourceName="PART_LayoutPanel"
                                       Command="{Binding CellsControlParentPannelLoadCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=neoTraderControls:RDataGrid}}" 
                                       CommandParameter="{Binding ElementName=PART_LayoutPanel}">
                    </dxmvvm:EventToCommand>

                    <dxmvvm:EventToCommand EventName="Loaded"                                            
                                           SourceObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=dxg:RowControl}}"
                                           Command="{Binding RowControlLoadCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=neoTraderControls:RDataGrid}}" 
                                           CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=dxg:RowControl}}">
                    </dxmvvm:EventToCommand>
                </dxmvvm:Interaction.Behaviors>
            </Grid>            
        </ContentControl>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowHorizontalLine" Value="False">
                <Setter Property="Visibility" TargetName="BottomLine" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowBottomLine" Value="True">
                <Setter Property="Visibility" TargetName="BottomLine" Value="Visible" />
            </Trigger>
            <Trigger Property="FadeSelection" Value="True">
                <!--<Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderUnfocusedBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />-->
            </Trigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="Background" Value="{DynamicResource TableRowToolsBgBrush}" />
            </DataTrigger>
            <Trigger Property="ShowRowBreak" Value="True">
                <Setter Property="BorderBrush" TargetName="BottomLine" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=RowBreakBrush}}" />
                <Setter Property="BorderThickness" TargetName="BottomLine" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=RowBreakThickness}}" />
            </Trigger>
            <Trigger Property="FixedRowPosition" Value="Bottom">
                <Setter Property="VerticalAlignment" TargetName="BottomLine" Value="Top" />
            </Trigger>
            <Trigger Property="IsLastFixedRow" Value="True">
                <Setter Property="Background" TargetName="BottomLine" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowSeparatorBrush}}" />
                <Setter Property="BorderThickness" TargetName="BottomLine" Value="0,1,0,1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{dxi:ThemeResource {themes:PaletteBrushThemeKey ResourceKey=HoverBackground}}" />
            </Trigger>
            <!--<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding View,RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=neoTraderControls:RDataGrid}}" Value="TreeListView"></Condition>
                    <Condition Binding="{Binding DataContext.IsExpanded,RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=dx:RowControl}}" Value="False"></Condition>
                    <Condition Binding="{Binding DataContext.Node.HasChildren,RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=dx:RowControl}}" Value="True"></Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_ExpandedTips" Property="Visibility" Value="Visible"></Setter>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding DataContext.IsExpanded,RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=dx:RowControl}}" Value="True">
                <Setter TargetName="PART_ExpandedTips" Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>-->
        </ControlTemplate.Triggers>
        
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonTemplate,IsThemeIndependent = true}" TargetType="{x:Type dxb:BarQuickCustomizationButton}">
        <Grid x:Name="Root" Margin="1">
            <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" />
            <!--<Path x:Name="Content" Fill="#FFF1F1F1" HorizontalAlignment="Right" Margin="3" Style="{StaticResource UIShape.RightDown}" VerticalAlignment="Bottom" cs:id="Path_0000" x:Uid="@Fill=Foreground" />-->
            <dx:DXImage x:Name="Content" Source="{x:Static neoTrader:Images.VMore}" Height="20"></dx:DXImage>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF3E3E40"  x:Uid="@To=HoverBackground" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF3E3E40"  x:Uid="@To=HoverBorder" />
                            <!--<ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF007ACC" x:Uid="@To=Focused" />-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF007ACC" x:Uid="@To=SelectionBackground" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF007ACC"  x:Uid="@To=SelectionBorder" />
                            <!--<ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF" x:Uid="@To=SelectionForeground" />-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF007ACC" x:Uid="@To=SelectionBackground" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF007ACC" x:Uid="@To=SelectionBorder" />
                            <!--<ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF" x:Uid="@To=SelectionForeground" />-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Horizontal" />
                    <VisualState x:Name="Vertical">
                        <!--<Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="180" CenterX="3.5" CenterY="3.5" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>-->
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <!--<Setter Property="HorizontalAlignment" TargetName="Content" Value="Center" />
                <Setter Property="VerticalAlignment" TargetName="Content" Value="Center" />-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--<dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=ArrowTemplateInMenu,IsThemeIndependent = true}">
        <dxcn:RenderPanel Margin="10">
            <dxbc:RenderArrowPath Data="F1 M 0,0 0,8 4,4 0,0 Z " Height="8" HorizontalAlignment="Center" Foreground="Beige" Margin="0" Stretch="Fill" VerticalAlignment="Center" Width="20" />
        </dxcn:RenderPanel>
    </dxcn:RenderTemplate>

    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=DefaultArrowTemplate,IsThemeIndependent = true}">
        <dxcn:RenderPanel>
            <dxbc:RenderArrowPath Data="F1 M 0,0 8,0 4,4 0,0 Z " Height="4" HorizontalAlignment="Center" Margin="0,1,0,0" Stretch="Fill" VerticalAlignment="Center" Width="80"  />
        </dxcn:RenderPanel>
    </dxcn:RenderTemplate>
    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=ArrowTemplateInPageHeader,IsThemeIndependent = true}">
        <dxcn:RenderPanel>
            <dxbc:RenderArrowPath Data="F1 M 0,0 8,0 4,4 0,0 Z " Height="4" HorizontalAlignment="Center" Margin="0,1,0,0" Stretch="Fill" VerticalAlignment="Center" Width="18"  />
        </dxcn:RenderPanel>
    </dxcn:RenderTemplate>-->

    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=BaseSplitItemTemplateInBar}" x:Shared="False">
        <dxcn:RenderBorder Name="PART_Root" Background="Transparent">
            <dxcn:RenderPanel>
                <dxb:RenderBarItemBorderControl Name="PART_Background" RenderTemplateSelector="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=BorderStateTemplateSelectorInBar}}" />
                <dxcn:RenderPanel LayoutProvider="{x:Static dxcn:LayoutProvider.DockInstance}">
                    <dxcn:RenderPanel Name="PART_ContentContainer">
                        <dxb:RenderBarItemBorderControl Name="PART_ContentBackground" HideBorderSide="Right" RenderTemplateSelector="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=BorderStateTemplateSelectorInBar}}" />
                        <dxcn:RenderPanel Name="PART_Container" LayoutProvider="{x:Static dxcn:LayoutProvider.DockInstance}">
                            <dxcn:RenderContentControl Name="PART_Glyph" RenderContentTemplate="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=GlyphTemplate}}" PreferRenderTemplate="False" />
                            <dxcn:RenderContentControl Name="PART_Content" PreferRenderTemplate="False" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                        </dxcn:RenderPanel>
                    </dxcn:RenderPanel>
                    <dxcn:RenderBorder Width="1" Name="PART_Separator" />
                    <dxcn:RenderPanel Name="PART_ArrowContainer">
                        <dxcn:RenderBorder Background="Transparent" />
                        <dxb:RenderBarItemBorderControl Name="PART_ArrowBackground" HideBorderSide="Left" RenderTemplateSelector="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=BorderStateTemplateSelectorInBar}}" />
                        <dxcn:RenderPanel Name="PART_PathArrowContainer" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <dxb:RenderArrowControl RenderTemplateSelector="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=RenderArrowControlTemplateSelector}}" />
                        </dxcn:RenderPanel>
                    </dxcn:RenderPanel>
                </dxcn:RenderPanel>
            </dxcn:RenderPanel>
        </dxcn:RenderBorder>
        <dxcn:RenderTemplate.Triggers>
            <dxcn:RenderTriggersCollection>
                <dxcn:RenderTriggersCollection.MergedTriggers>
                    <dxcn:RenderTriggersCollection Source="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=GlyphAlignmentStatesInBar}}" />
                    <dxcn:RenderTriggersCollection Source="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=ArrowAlignmentStates}}" />
                    <dxcn:RenderTriggersCollection Source="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=ForegroundColorStatesInBar}}" />
                    <dxcn:RenderTriggersCollection Source="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EnabledBorderStates}}" />
                    <dxcn:RenderTriggersCollection Source="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitAppearanceTriggers}}" />
                </dxcn:RenderTriggersCollection.MergedTriggers>
            </dxcn:RenderTriggersCollection>
        </dxcn:RenderTemplate.Triggers>
    </dxcn:RenderTemplate>



    <!--<dxb:BarItemRenderTemplateSelector x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=TemplateSelector,IsThemeIndependent = true}" 
                                       DefaultTemplateInBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=DefaultTemplateInBar}}" 
                                       SplitItemTemplateInBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitItemTemplateInBar}}" 
                                       EditItemTemplateInBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditItemTemplateInBar}}" 
                                       StaticTemplateInBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=StaticTemplateInBar}}" 
                                       DefaultTemplateInStatusBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=DefaultTemplateInStatusBar}}" 
                                       SplitItemTemplateInStatusBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitItemTemplateInStatusBar}}" 
                                       EditItemTemplateInStatusBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditItemTemplateInStatusBar}}" 
                                       StaticTemplateInStatusBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=StaticTemplateInStatusBar}}"
                                       DefaultTemplateInMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInMenu}}" 
                                       SplitItemTemplateInMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitItemTemplateInMenu}}" 
                                       EditTemplateInMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditTemplateInMenu}}" 
                                       StaticTemplateInMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=StaticTemplateInMenu}}" 
                                       DefaultTemplateInMainMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=DefaultTemplateInMainMenu}}" 
                                       SplitItemTemplateInMainMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitItemTemplateInMainMenu}}" 
                                       EditItemTemplateInMainMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditItemTemplateInMainMenu}}" 
                                       SubTemplateInMainMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=DefaultTemplateInMainMenu}}" 
                                       DefaultTemplateInPageHeader="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInPageHeader}}" 
                                       SplitTemplateInPageHeader="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitTemplateInPageHeader}}"
                                       StaticTemplateInPageHeader="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=StaticTemplateInPageHeader}}" 
                                       EditTemplateInPageHeader="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditTemplateInPageHeader}}" 
                                       DefaultTemplateInApplicationMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInApplicationMenu}}" 
                                       SplitTemplateInApplicationMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitTemplateInApplicationMenu}}" 
                                       EditTemplateInApplicationMenu="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditTemplateInApplicationMenu}}" 
                                       DefaultTemplateInPageGroupLarge="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInPageGroupLarge}}" 
                                       DefaultTemplateInPageGroupSmall="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInPageGroupSmall}}" 
                                       SplitItemTemplateInPageGroupLarge="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitItemTemplateInPageGroupLarge}}"
                                       SplitItemTemplateInPageGroupSmall="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitItemTemplateInPageGroupSmall}}" 
                                       StaticItemTemplateInPageGroup="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=StaticItemTemplateInPageGroup}}"
                                       EditTemplateInPageGroup="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditTemplateInPageGroup}}"
                                       EditTemplateInPageGroupSmallWithoutText="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditTemplateInPageGroupSmallWithoutText}}" 
                                       SimplifiedTemplateInPageGroupSmall="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SimplifiedTemplateInPageGroupSmall}}" 
                                       SimplifiedSplitItemTemplateInPageGroupSmall="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SimplifiedSplitItemTemplateInPageGroupSmall}}"
                                       SimplifiedStaticItemTemplateInPageGroup="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SimplifiedStaticItemTemplateInPageGroup}}" 
                                       SimplifiedEditTemplateInPageGroup="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SimplifiedEditTemplateInPageGroup}}" 
                                       SimplifiedEditTemplateInPageGroupSmallWithoutText="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SimplifiedEditTemplateInPageGroupSmallWithoutText}}" 
                                       DefaultTemplateInRibbonToolBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInRibbonToolBar}}" 
                                       SplitTemplateInRibbonToolBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitTemplateInRibbonToolBar}}" 
                                       StaticTemplateInRibbonToolBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=StaticTemplateInRibbonToolBar}}" 
                                       EditTemplateInRibbonToolBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditTemplateInRibbonToolBar}}" 
                                       DefaultTemplateInRibbonToolBarFooter="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInRibbonToolBarFooter}}" 
                                       SplitTemplateInRibbonToolBarFooter="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitTemplateInRibbonToolBarFooter}}" 
                                       StaticTemplateInRibbonToolBarFooter="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=StaticTemplateInRibbonToolBarFooter}}" 
                                       EditTemplateInRibbonToolBarFooter="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditTemplateInRibbonToolBarFooter}}" 
                                       TemplateInRibbonStatusBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInRibbonStatusBar}}" 
                                       EditTemplateInRibbonStatusBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EditItemTemplateInRibbonStatusBar}}" 
                                       SplitTemplateInRibbonStatusBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitTemplateInRibbonStatusBar}}" 
                                       StaticTemplateInRibbonStatusBar="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=StaticTemplateInRibbonStatusBar}}" />-->


    <!--<dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=BaseSplitTemplateInApplicationMenu,IsThemeIndependent = true}" x:Shared="False">
        <dxcn:RenderBorder Name="PART_Root" Background="Transparent">
            <dxcn:RenderPanel>
                <dxb:RenderBarItemBorderControl Name="PART_Background" RenderTemplateSelector="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=BorderStateTemplateSelectorInApplicationMenu}}" />
                <dxcn:RenderPanel LayoutProvider="{x:Static dxcn:LayoutProvider.DockInstance}">
                    <dxcn:RenderPanel Dock="Left">
                        <dxb:RenderBarItemBorderControl Name="PART_ContentBackground" RenderTemplateSelector="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=BorderStateTemplateSelectorInApplicationMenu}}" />
                        <dxcn:RenderPanel Name="PART_Container" LayoutProvider="{x:Static dxcn:LayoutProvider.DockInstance}">
                            <dxcn:RenderContentControl Name="PART_Glyph" RenderContentTemplate="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=GlyphTemplate}}" PreferRenderTemplate="False" Dock="Left" />
                            <dxcn:RenderPanel Name="PART_FirsContainer" Dock="Left" LayoutProvider="{x:Static dxcn:LayoutProvider.DockInstance}">
                                <dxcn:RenderContentControl Name="PART_Content" PreferRenderTemplate="False" Dock="Top" />
                                <dxcn:RenderContentControl Name="PART_Description" Dock="Bottom" />
                            </dxcn:RenderPanel>
                        </dxcn:RenderPanel>
                    </dxcn:RenderPanel>
                    <dxcn:RenderBorder Width="1" Name="PART_Separator" />
                    <dxcn:RenderPanel Name="PART_ArrowContainer" Dock="Right">
                        <dxcn:RenderBorder Background="Transparent" />
                        <dxb:RenderBarItemBorderControl Name="PART_ArrowBackground" RenderTemplateSelector="{DynamicResource {dxbt:BarItemRenderThemeKey ResourceKey=BorderStateTemplateSelectorInApplicationMenu}}" />
                        <dxcn:RenderPanel>
                            <dxb:RenderArrowControl RenderTemplateSelector="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=RenderArrowControlTemplateSelector}}" />
                        </dxcn:RenderPanel>
                    </dxcn:RenderPanel>
                </dxcn:RenderPanel>
            </dxcn:RenderPanel>
        </dxcn:RenderBorder>
        <dxcn:RenderTemplate.Triggers>
            <dxcn:RenderTriggersCollection>
                <dxcn:RenderTriggersCollection.MergedTriggers>
                    <dxcn:RenderTriggersCollection Source="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=GlyphAlignmentStatesInBar}}" />
                    <dxcn:RenderTriggersCollection Source="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=ForegroundColorStatesInApplicationMenu}}" />
                    <dxcn:RenderTriggersCollection Source="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=EnabledBorderStates}}" />
                    <dxcn:RenderTriggersCollection Source="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=SplitAppearanceTriggers}}" />
                </dxcn:RenderTriggersCollection.MergedTriggers>
            </dxcn:RenderTriggersCollection>
        </dxcn:RenderTemplate.Triggers>
    </dxcn:RenderTemplate>

    <dxb:RenderBarItemBorderStateTemplateSelector x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=BorderStateTemplateSelectorInApplicationMenu}" 
                                                  NormalTemplate="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=NormalBackgroundTemplateInMenu}}" 
                                                  HoverTemplate="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=HoverBackgroundTemplateInMenu}}" 
                                                  PressedTemplate="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=PressedBackgroundTemplateInMenu}}" 
                                                  CheckedTemplate="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=CheckedBackgroundTemplateInMenu}}" 
                                                  CustomizationTemplate="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=CustomizationBackgroundTemplateInMenu}}" 
                                                  IndeterminateTemplate="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=IndeterminateBackgroundTemplateInMenu}}" 
                                                  ContentHighlight="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=ContentHighlightTemplateInMenu}}" />-->
</ResourceDictionary>