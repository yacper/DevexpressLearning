<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:NeoTrader.UI.Controls"
                    xmlns:neoTrader="clr-namespace:NeoTrader"
                    xmlns:neoTraderControls="clr-namespace:NeoTrader.UI.Controls"
                    xmlns:local="clr-namespace:NeoControls"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:dxdot="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys" 
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" >
    <system:Double x:Key="TableRowHeight">22</system:Double>
    <DataTemplate x:Key="BarItemContentDataTemplate">
        <Border x:Name="PATA_BAR_Border" Padding="0">
            <DockPanel>
                <TextBlock x:Name="_Text" Text="{Binding DisplayName}" HorizontalAlignment="Left">
                                <dx:Badge.Badge>
                                    <dx:Badge BadgeKind="None" Content="{Binding BadgeContent}" />
                                </dx:Badge.Badge>
                </TextBlock>
                <Image x:Name="_StateImg" Margin="20,0,0,0" Width="20" Height="20" HorizontalAlignment="Right" Source="{Binding StateImg}" />
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=DisplayMode}" Value="Content">
                <Setter TargetName="_Text" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DisplayMode}" Value="ContentAndGlyph">
                <Setter TargetName="_Text" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSeparator}" Value="True">
                <Setter TargetName="PATA_BAR_Border" Property="BorderThickness" Value="1,0,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=StateImg}" Value="{x:Null}">
                <Setter TargetName="_StateImg" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <local:LinkStatusToBrushConverter x:Key="LinkStatusToBrushConverter"></local:LinkStatusToBrushConverter>
    <local:ELinkStatusToColorTextConverter x:Key="ELinkStatusToColorTextConverter"></local:ELinkStatusToColorTextConverter>
    <DataTemplate x:Key="GlyphDataTemplate" DataType="{x:Type neoTrader:CommandVm}">
        <ContentControl>
            <Grid>
                <Border x:Name="Part_Border" Background="{Binding Converter={StaticResource LinkStatusToBrushConverter}}">
                    <TextBlock Text="{Binding Tag, Converter={StaticResource ELinkStatusToColorTextConverter}}"></TextBlock>
                </Border>
                <!--<dx:DXImage Source="{x:Static Images.Link}"></dx:DXImage>-->
            </Grid>
        </ContentControl>
        <DataTemplate.Triggers>
            <!--<Trigger Property="IsLink" Value="False">
                <Setter TargetName="Part_Border" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>-->
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <DataTemplate x:Key="BarButtonItemDataTemplate">
        <ContentControl>
            <dxb:BarButtonItem KeyGesture="{Binding KeyGesture}"
                               Command="{Binding Command}"                               
                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                               Alignment="Far"
                               Glyph="{Binding Glyph}"                               
                               ShowKeyGesture="True"
                               IsEnabled="{Binding IsEnabled}"                               
                               BarItemDisplayMode="{Binding DisplayMode}"   
                               Content="{Binding}" 
                               ContentTemplate="{StaticResource BarItemContentDataTemplate}">
            </dxb:BarButtonItem>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="BarSubItemDataTemplate">
        <ContentControl>
            <neoTraderControls:RBarSubItem KeyGesture="{Binding KeyGesture}"
                                           Command="{Binding Command}"
                                           Glyph="{Binding Glyph}"                                           
                                           IsEnabled="{Binding IsEnabled}"                               
                                           BarItemDisplayMode="{Binding DisplayMode}"                                                                          
                                           Content="{Binding}"                            
                                           ItemLinksSource="{Binding Commands}"
                                           ItemTemplateSelector="{DynamicResource BarItemDataTemplateSelector}"
                                           ContentTemplate="{StaticResource BarItemContentDataTemplate}">
            </neoTraderControls:RBarSubItem>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="BarCheckItemDataTemplate">
        <ContentControl>
            <dxb:BarCheckItem KeyGesture="{Binding KeyGesture}"
                              Command="{Binding Command}"                               
                              Alignment="Far"
                              Glyph="{Binding Glyph}"
                              ShowKeyGesture="True"
                              IsChecked="{Binding IsChecked}"
                              IsEnabled="{Binding IsEnabled}"                               
                              BarItemDisplayMode="{Binding DisplayMode}"   
                              Content="{Binding}" 
                              ContentTemplate="{StaticResource BarItemContentDataTemplate}">
            </dxb:BarCheckItem>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="LinkItemDataTemplate">
        <ContentControl>
            <dxb:BarButtonItem KeyGesture="{Binding KeyGesture}"
                               Command="{Binding Command}"                               
                               Alignment="Far"                               
                               GlyphTemplate="{StaticResource GlyphDataTemplate}"
                               ShowKeyGesture="True"
                               IsEnabled="{Binding IsEnabled}"                               
                               BarItemDisplayMode="{Binding DisplayMode}"   
                               Content="{Binding}" 
                               ContentTemplate="{StaticResource BarItemContentDataTemplate}">
            </dxb:BarButtonItem>
        </ContentControl>
    </DataTemplate>


    <local:BarItemDataTemplateSelector x:Key="BarItemDataTemplateSelector" 
                                       LinkItemTemplate="{StaticResource LinkItemDataTemplate}"
                                       BarCheckItemTemplate="{StaticResource BarCheckItemDataTemplate}"
                                       BarButtonItemTemplate="{StaticResource BarButtonItemDataTemplate}" 
                                       BarSubItemTemplate="{StaticResource BarSubItemDataTemplate}"></local:BarItemDataTemplateSelector>

    <!--<DataTemplate x:Key="CommandTemplate">
        <Border x:Name="_Border" >
            <Button x:Name="_Button" Command="{Binding Command}">
                <Button.ContextMenu>
                    <ContextMenu x:Name="MainContextMenu"
                                 PlacementRectangle="{Binding RelativeSource={RelativeSource Self}}">
                        <MenuItem Header="Main">
                            <MenuItem Header="Find" />
                            <MenuItem Header="Add" />
                            <MenuItem Header="View" />
                            <MenuItem Header="Edit" />
                        </MenuItem>
                    </ContextMenu>
                </Button.ContextMenu>
                <Button.Triggers>
                    <EventTrigger SourceName="_Button" RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainContextMenu"
                                                               Storyboard.TargetProperty="(ContextMenu.IsOpen)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <system:Boolean>True</system:Boolean>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
                <StackPanel x:Name="_Panel" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image x:Name="_Glyph" Width="20" Height="20" Source="{Binding Glyph}" Margin="0,-2,0,-2"/>
                    <TextBlock x:Name="_Text" Text="{Binding DisplayName}">
                        <dx:Badge.Badge>
                            <dx:Badge BadgeKind="None" Content="{Binding BadgeContent}" />
                        </dx:Badge.Badge>
                    </TextBlock>
                    <Image x:Name="_StateImg" Width="20" Height="20" Source="{Binding StateImg}" />
                </StackPanel>
            </Button>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=DisplayMode}" Value="Content">
                <Setter TargetName="_Glyph" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="_Text" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DisplayMode}" Value="ContentAndGlyph">
                <Setter TargetName="_Glyph" Property="Visibility" Value="Visible" />
                <Setter TargetName="_Text" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsSeparator}" Value="True">
                <Setter TargetName="_Border" Property="BorderThickness" Value="1,0,0,0" />
                <Setter TargetName="_Button" Property="Visibility" Value="Collapsed" />
            </DataTrigger>


        </DataTemplate.Triggers>
    </DataTemplate>-->
    <!--<Style TargetType="controls:RToolItem" >
        --><!--<Setter Property="Template">                --><!--ControlTemplate--><!--
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Image Source="{Binding CommandVm.Glyph}" />
                            <TextBlock Text="{Binding CommandVm.DisplayName}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>

        </Setter>--><!--

        <Setter Property="ContentTemplate">     --><!--DataTemplate--><!--
            <Setter.Value>
                <DataTemplate DataType="CommandVm">
                    <Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Image Source="{Binding Glyph}" />
                            <TextBlock Text="{Binding DisplayName}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        --><!--<Setter Property="con">
            <Setter.Value>

            </Setter.Value>

        </Setter>--><!--


    </Style>-->

    <ControlTemplate x:Key="CommonToolsTemplate">
        <dxb:BarContainerControl ContainerType="Top" HorizontalAlignment="Right" >
            <dxb:ToolBarControl RotateWhenVertical="True" 
                                ShowDragWidget="False" 
                                Background="{Binding ToolsBgBrush}"
                                ItemsSource="{Binding DefaultTools}"                                 
                                ItemTemplateSelector="{DynamicResource BarItemDataTemplateSelector}">
            </dxb:ToolBarControl>
        </dxb:BarContainerControl>
        <!--<controls:RToolsControl RItemsSource="{Binding ToolVms}"
                                Background="{Binding ToolsBgBrush}"  
                                HorizontalAlignment="Right"
                                Margin="0,0,0,1"
                                ItemTemplate="{StaticResource RToolsControlItemTemplate}">
        </controls:RToolsControl>-->
    </ControlTemplate>

    <local:TableRowToolsVisibleConverter x:Key="TableRowToolsVisibleConverter"></local:TableRowToolsVisibleConverter>
    <ControlTemplate x:Key="RowControlTemplate" TargetType="dxg:RowControl" >
        <Grid Height="{StaticResource TableRowHeight}" Background="Transparent" >
            <Border x:Name="Background" Background="{TemplateBinding Background}" />
            <Border x:Name="BottomLine" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" VerticalAlignment="Bottom" />
            <Grid x:Name="PART_LayoutPanel"/>
            <ContentControl x:Name="PART_TOOLS"                            
                            DataContext="{Binding RelativeSource={RelativeSource AncestorLevel=1,AncestorType=controls:RGridControl,Mode=FindAncestor}}"
                            Template="{StaticResource CommonToolsTemplate}">
                <ContentControl.Visibility>
                    <MultiBinding Converter="{StaticResource TableRowToolsVisibleConverter}">
                        <Binding Path="ToolsBarIsFixed"></Binding>
                        <Binding RelativeSource="{RelativeSource AncestorLevel=1,AncestorType=dxg:RowControl,Mode=FindAncestor}" Path="IsMouseOver"></Binding>
                    </MultiBinding>
                </ContentControl.Visibility>
            </ContentControl>
            <!--<Grid.ContextMenu>
                <Binding Path="DataContext.ToolVms" ElementName="PART_TOOLS" Converter="{StaticResource RowControlContextMenuConverter}"></Binding>
            </Grid.ContextMenu>-->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowHorizontalLine" Value="False">
                <Setter Property="Visibility" TargetName="BottomLine" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowBottomLine" Value="True">
                <Setter Property="Visibility" TargetName="BottomLine" Value="Visible" />
            </Trigger>
            <Trigger Property="FadeSelection" Value="True">
                <!--<Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderUnfocusedBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />-->
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RowHoverBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="Background" Value="{DynamicResource TableRowToolsBgBrush}" />
            </DataTrigger>
            <Trigger Property="ShowRowBreak" Value="True">
                <Setter Property="BorderBrush" TargetName="BottomLine" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=RowBreakBrush}}" />
                <Setter Property="BorderThickness" TargetName="BottomLine" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=RowBreakThickness}}" />
            </Trigger>
            <Trigger Property="FixedRowPosition" Value="Bottom">
                <Setter Property="VerticalAlignment" TargetName="BottomLine" Value="Top" />
            </Trigger>
            <Trigger Property="IsLastFixedRow" Value="True">
                <Setter Property="Background" TargetName="BottomLine" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowSeparatorBrush}}" />
                <Setter Property="BorderThickness" TargetName="BottomLine" Value="0,1,0,1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>